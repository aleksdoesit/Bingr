{"version":3,"sources":["Components/Home.js","Components/ShowDetails.js","Components/Popular.js","Components/HighRated.js","Components/Newest.js","App.js","serviceWorker.js","index.js"],"names":["Home","state","popularList","newestList","highestRatedList","body","React","createRef","ref","current","scrollIntoView","behavior","block","axios","method","url","params","api_key","language","sort_by","first_air_date_year","then","result","console","log","setState","data","results","className","onClick","scroll","this","slice","map","poster","src","poster_path","alt","show","to","id","href","n","Component","ShowDetails","genres","props","match","name","number_of_seasons","number_of_episodes","overview","homepage","target","genre","Popular","showList","HighRated","Newest","App","getCollage","page","basename","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.58509a9e.chunk.js","sourcesContent":["import React, { Component, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass Home extends Component {\n    constructor() {\n        super()\n        this.state = {\n            popularList: [],\n            newestList: [],\n            highestRatedList: []\n        }\n        this.body = React.createRef();\n    }\n\n    scroll(ref) {\n        ref.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n        });\n    }\n    \n    componentDidMount() {\n        axios({\n            method: 'GET',\n            url: 'https://api.themoviedb.org/3/discover/tv',\n            params: {\n                api_key: '5cd6b6a1e0f8042fd72b72658e13964c',\n                language: 'en-US',\n                sort_by: 'popularity.desc',\n                first_air_date_year: 2018            \n            }\n        }).then((result) => {\n            console.log(result);\n            this.setState({\n                popularList: result.data.results\n            })\n        })\n        axios({\n            method: 'GET',\n            url: 'https://api.themoviedb.org/3/discover/tv',\n            params: {\n                api_key: '5cd6b6a1e0f8042fd72b72658e13964c',\n                language: 'en-US',\n                first_air_date_year: 2020\n            }\n        }).then((result) => {\n            console.log(result);\n            this.setState({\n                newestList: result.data.results\n            })\n        })\n        axios({\n            method: 'GET',\n            url: 'https://api.themoviedb.org/3/discover/tv',\n            params: {\n                api_key: '5cd6b6a1e0f8042fd72b72658e13964c',\n                language: 'en-US',\n                sort_by: 'vote_average.desc',\n                'vote_count.gte': 50,\n                'vote_average.gte': 8,\n                first_air_date_year: 2017\n            }\n        }).then((result) => {\n            console.log(result);\n            this.setState({\n                highestRatedList: result.data.results\n            })\n        })\n    }\n\n\n\n    render() {\n        return (\n            <div className='main'>\n                <header className='mainHeader'>\n                    <div className='intro'>\n                        <h3>Welcome to</h3>\n                        <h1>Bingr</h1>\n                        <p>Discover Your New Favourite Show</p>\n                        <button onClick={() => {this.scroll(this.body)}}><a>Get Started</a></button>\n                    </div>\n\n                    <div className='posterCollage'>\n                        <div className='overlay'>\n                        </div>\n                        <div className='imageContainer'>\n                        {\n                            this.state.popularList.slice(0, 18).map((poster) => {\n                                return (\n                                    <img src={`http://image.tmdb.org/t/p/w500/${poster.poster_path}`} alt=\"\"/>\n                                )\n                            })\n                        }\n                        </div>\n                    </div>\n                </header>\n                <div className='body' ref={this.body}>\n                <h2>Trending</h2>\n                <ul className='popularShows'>\n                {\n                    this.state.popularList.slice(0, 5).map((show) => {\n                        return (\n                            <li className='shows'>\n                                <Link to={`/tv/${show.id}`}>\n                                    <img src={`http://image.tmdb.org/t/p/w500/${show.poster_path}`} alt=\"\"/>\n                                </Link>\n                            </li>\n                        )\n                    })\n                }\n                <Link className='viewMoreContainer' to={`/popular`}>\n                <button className='viewMore'><a href=\"#\">View More ➡</a></button>\n                </Link>\n            </ul>\n            <h2>Newest</h2>\n            <ul className='newestShows'>\n                {\n                    this.state.newestList.slice(0, 5).map((show) => {\n                        return (\n                            <li className='shows'>\n                                <Link to={`/tv/${show.id}`}>\n                                    <img src={`http://image.tmdb.org/t/p/w500/${show.poster_path}`} alt=\"\"/>\n                                </Link>\n                            </li>\n                        )\n                    })\n                }\n                <Link className='viewMoreContainer' to={`/new`}>\n                    <button className='viewMore'n><a href=\"#\">View More ➡</a></button>\n                </Link>\n            </ul>\n            <h2>Highly Rated</h2>\n            <ul className='highestRatedShows'>\n                {\n                    this.state.highestRatedList.slice(0, 5).map((show) => {\n                        return (\n                            <li className='shows'>\n                                <Link to={`/tv/${show.id}`}>\n                                    <img src={`http://image.tmdb.org/t/p/w500/${show.poster_path}`} alt=\"\"/>\n                                </Link>\n                            </li>\n                        )\n                    })\n                }\n                <Link className='viewMoreContainer' to={`/rated`}>\n                <button className='viewMore'><a href=\"#\">View More ➡</a></button>\n                </Link>\n            </ul>\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default Home\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass ShowDetails extends Component {\n    constructor() {\n        super()\n        this.state = {\n            show: {},\n            genres: []\n        }\n    }\n\n    componentDidMount(){\n        axios({\n            method: 'GET',\n            url: `https://api.themoviedb.org/3/tv/${this.props.match.params.id}`,\n            params: {\n                api_key: '5cd6b6a1e0f8042fd72b72658e13964c'\n            }\n        }).then((result) => {\n            this.setState({\n                show: result.data,\n                genres: result.data.genres\n            })\n        })\n    }\n\n    render() {\n        console.log(this.state);\n        return (\n            <div className='detailsWrapper'>\n                <div className='posterContainer'>\n                    <img src={`http://image.tmdb.org/t/p/w500/${this.state.show.poster_path}`} alt=\"\"/>\n                </div>\n                <div className='showDescription'>\n                    <h1>{this.state.show.name}</h1>\n                    <div className='episodeGuide'>\n                    <p>Seasons: {this.state.show.number_of_seasons}</p>\n                    <p>Episodes {this.state.show.number_of_episodes}</p>\n                    </div>\n                    <p className='showOverview'>{this.state.show.overview}</p>\n                    <button><a href={this.state.show.homepage} target=\"_blank\">Visit Homepage</a></button>\n                    <div className='genres'>\n                        <p>Tags:</p>\n                        {this.state.genres.map((genre) => {\n                            return (\n                                <p>{genre.name}</p>\n                            )\n                        })}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ShowDetails\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass Popular extends Component {\n    constructor() {\n        super()\n        this.state = {\n            showList: []\n        }\n    }\n    componentDidMount() {\n        axios({\n            method: 'GET',\n            url: 'https://api.themoviedb.org/3/discover/tv',\n            params: {\n                api_key: '5cd6b6a1e0f8042fd72b72658e13964c',\n                language: 'en-US',\n                sort_by: 'popularity.desc',\n                first_air_date_year: '2019'\n            }\n        }).then((result) => {\n            console.log(result);\n            this.setState({\n                showList: result.data.results\n            })\n        })\n    }\n\n    render() {\n        return (\n            <div className='viewMoreWrapper'>\n                <h1>Checkout What's Trending</h1>\n                <ul className='viewMoreList'>\n                    {\n                        this.state.showList.map((show) => {\n                            return (\n                                <li className='shows'>\n                                    <Link to={`/tv/${show.id}`}>\n                                        <img src={`http://image.tmdb.org/t/p/w500/${show.poster_path}`} alt=\"\"/>\n                                    </Link>\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Popular","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass HighRated extends Component {\n    constructor() {\n        super()\n        this.state = {\n            showList: []\n        }\n    }\n    componentDidMount() {\n        axios({\n            method: 'GET',\n            url: 'https://api.themoviedb.org/3/discover/tv',\n            params: {\n                api_key: '5cd6b6a1e0f8042fd72b72658e13964c',\n                language: 'en-US',\n                sort_by: 'vote_average.desc',\n                'vote_count.gte': 50,\n                'vote_average.gte': 8,\n                first_air_date_year: 2017\n            }\n        }).then((result) => {\n            console.log(result);\n            this.setState({\n                showList: result.data.results\n            })\n        })\n    }\n\n    render() {\n        return (\n            <div className='viewMoreWrapper'>\n                <h1>Checkout Some Fan Favourites</h1>\n                <ul className='viewMoreList'>\n                    {\n                        this.state.showList.map((show) => {\n                            return (\n                                <li className='shows'>\n                                    <Link to={`/tv/${show.id}`}>\n                                        <img src={`http://image.tmdb.org/t/p/w500/${show.poster_path}`} alt=\"\"/>\n                                    </Link>\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default HighRated","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass Newest extends Component {\n    constructor() {\n        super()\n        this.state = {\n            showList: []\n        }\n    }\n    componentDidMount() {\n        axios({\n            method: 'GET',\n            url: 'https://api.themoviedb.org/3/discover/tv',\n            params: {\n                api_key: '5cd6b6a1e0f8042fd72b72658e13964c',\n                language: 'en-US',\n                first_air_date_year: 2020\n            }\n        }).then((result) => {\n            console.log(result);\n            this.setState({\n                showList: result.data.results\n            })\n        })\n    }\n\n    render() {\n        return (\n            <div className='viewMoreWrapper'>\n                <h1>Checkout What's Just Released</h1>\n                <ul className='viewMoreList'>\n                    {\n                        this.state.showList.map((show) => {\n                            return (\n                                <li className='shows'>\n                                    <Link to={`/tv/${show.id}`}>\n                                        <img src={`http://image.tmdb.org/t/p/w500/${show.poster_path}`} alt=\"\"/>\n                                    </Link>\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Newest","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, HashRouter, Route, Link } from 'react-router-dom';\nimport Home from './Components/Home'\nimport ShowDetails from './Components/ShowDetails';\nimport Popular from './Components/Popular';\nimport HighRated from './Components/HighRated';\nimport Newest from './Components/Newest';\nimport './styles/styles.scss'\n\nexport class App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            getCollage: []\n        }\n    }\n    componentDidMount() {\n        axios({\n            method: 'GET',\n            url: 'https://api.themoviedb.org/3/discover/tv',\n            params: {\n                api_key: '5cd6b6a1e0f8042fd72b72658e13964c',\n                language: 'en-US',\n                sort_by: 'popularity.desc',\n                first_air_date_year: '2020',\n                page: 1\n            }\n        }).then((result) => {\n            console.log(result);\n            this.setState({\n                getCollage: result.data.results\n            })\n        })\n    }\n    render() {\n        return (\n            <HashRouter basename='/'>\n                <div>\n                    <nav className='mainNav'>\n                        <h2>Bingr</h2>\n                        <ul>\n                            <Link className='routerNavigation' to='/'>Home</Link>\n                            <Link className='routerNavigation' to='/popular'>Trending</Link>\n                            <Link className='routerNavigation' to='/new'>New</Link>\n                            <Link className='routerNavigation' to='/rated'>Highly Rated</Link>\n                        </ul>\n                    </nav>\n                    <Route exact path='/' component={ Home }/>\n                    <Route path='/tv/:id' component={ ShowDetails } />\n                    <Route path='/popular' component={ Popular } />\n                    <Route path='/new' component={ Newest } />\n                    <Route path='/rated' component={ HighRated } />\n                    <footer>\n                        <p>Created by Aleks Nikolic, 2020</p>\n                    </footer>\n                </div>\n            </HashRouter>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n        <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}